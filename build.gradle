buildscript {
	dependencies {
		classpath("org.flywaydb:flyway-database-postgresql:10.21.0")
	}
}

plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.jooq.jooq-codegen-gradle' version '3.19.10'
	id 'org.flywaydb.flyway' version '10.21.0'
}

group = 'com.quo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'jakarta.validation:jakarta.validation-api'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jooq:jooq:3.19.10'
	implementation 'org.jooq:jooq-meta:3.19.10'
	implementation 'org.jooq:jooq-codegen-gradle:3.19.10'
	implementation 'org.jooq:jooq-postgres-extensions:3.19.10'
	implementation 'org.hibernate.validator:hibernate-validator'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	jooqCodegen("org.postgresql:postgresql")
}

sourceSets.main {
	java.srcDirs("build/generated-sources/jooq")
}

jooq {
	configuration{
		jdbc {
			driver = 'org.postgresql.Driver'
			url = 'jdbc:postgresql://localhost:5432/postgres'
			user = 'myuser'
			password = 'secret'
		}
		generator {
			database {
				name = "org.jooq.meta.postgres.PostgresDatabase"
				inputSchema = "public"
				includes = ".*"
			}

			target {
				packageName = "com.quo.booksManage.db"
			}
		}
	}
}

flyway {
	driver = 'org.postgresql.Driver'
	url = 'jdbc:postgresql://localhost:5432/postgres'
	user = 'myuser'
	password = 'secret'
	schemas = ['public']
	locations = ['classpath:db/migration']
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}




